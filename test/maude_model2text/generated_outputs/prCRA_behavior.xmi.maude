mod @ARCHITECTURECRA@BEHAVIOR@ is
   
  ---- <begin> Importations
  pr E-MOTIONS .
  pr DISCRETE_TIME .
  pr @ARCHITECTURECRA@ .
  ---- <end> Importations
   
  ---- <begin> Operation declarations
  op classes@OCLSf : -> @StructuralFeature .
  op features@OCLSf : -> @StructuralFeature .
  op encapsulates@OCLSf : -> @StructuralFeature .
  op dataDependency@OCLSf : -> @StructuralFeature .
  op functionalDependency@OCLSf : -> @StructuralFeature .
  op isEncapsulatedBy@OCLSf : -> @StructuralFeature .
  op name@OCLSf : -> @StructuralFeature .
  op notassigned@assignFeature : Set Set{@Object} @Model -> Bool .
  op DMM : -> OpName .
  op DMA : -> OpName .
  op MAI : -> OpName .
  op f : -> Vid .
  op m1 : -> Vid .
  op m2 : -> Vid .
  ---- <begin> Operation declarations
   
  ---- <begin> Equations
  eq name(classes@OCLSf)
    = "classes" .
  
  eq name(features@OCLSf)
    = "features" .
  
  eq name(encapsulates@OCLSf)
    = "encapsulates" .
  
  eq name(dataDependency@OCLSf)
    = "dataDependency" .
  
  eq name(functionalDependency@OCLSf)
    = "functionalDependency" .
  
  eq name(isEncapsulatedBy@OCLSf)
    = "isEncapsulatedBy" .
  
  eq name(name@OCLSf)
    = "name" .
  
  eq rulesInformation
    = _`{_`}(@MGBehavior@,__(<_:_|_>(oid('Rule0),AtomicRule@MGBehavior,_#_(_:_(name@Rule@MGBehavior,"createClass"),_:_(lowerBound@Rule@MGBehavior,null),_:_(upperBound@Rule@MGBehavior,null),_:_(soft@Rule@MGBehavior,false),_:_(periodicity@AtomicRule@MGBehavior,null))),<_:_|_>(oid('Rule0),AtomicRule@MGBehavior,_#_(_:_(name@Rule@MGBehavior,"assignFeature"),_:_(lowerBound@Rule@MGBehavior,null),_:_(upperBound@Rule@MGBehavior,null),_:_(soft@Rule@MGBehavior,false),_:_(periodicity@AtomicRule@MGBehavior,null))))) .
  
  ceq [createClass] : mte(_`{_`}(MM@:@Metamodel,__(<_:_|_>(cm:OCL-Type,CLASSMODEL@ARCHITECTURECRA@cm@CLASS:ClassModel@architectureCRA,_#_(_:_(classes@ClassModel@architectureCRA,CLASSES@cm@ATT:OCL-Type),cm@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object})))
    = 0
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(cm:OCL-Type,CLASSMODEL@ARCHITECTURECRA@cm@CLASS:ClassModel@architectureCRA,_#_(_:_(classes@ClassModel@architectureCRA,CLASSES@cm@ATT:OCL-Type),cm@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object})) .
  
  ceq notassigned@assignFeature(Set`{_`}(_;_(f:OCL-Type,c:OCL-Type)),none,_`{_`}(MM@:@Metamodel,__(<_:_|_>(f:OCL-Type,FEATURE@ARCHITECTURECRA@f@CLASS:Feature@architectureCRA,_#_(_:_(isEncapsulatedBy@Feature@architectureCRA,ISENCAPSULATEDBY@f@ATT:OCL-Type),f@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(c1:OCL-Type,CLASS@ARCHITECTURECRA@c1@CLASS:Class@architectureCRA,_#_(_:_(encapsulates@Class@architectureCRA,ENCAPSULATES@c1@ATT:OCL-Type),c1@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object})))
    = true
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(f:OCL-Type,FEATURE@ARCHITECTURECRA@f@CLASS:Feature@architectureCRA,_#_(_:_(isEncapsulatedBy@Feature@architectureCRA,ISENCAPSULATEDBY@f@ATT:OCL-Type),f@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(c1:OCL-Type,CLASS@ARCHITECTURECRA@c1@CLASS:Class@architectureCRA,_#_(_:_(encapsulates@Class@architectureCRA,ENCAPSULATES@c1@ATT:OCL-Type),c1@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object}))
    /\ _in_(c1:OCL-Type,ISENCAPSULATEDBY@f@ATT:OCL-Type) .
  
  eq notassigned@assignFeature(OIDSET@:Set,OBJSET@:Set{@Object},MODEL@:@Model)
    = false .
  
  ceq [assignFeature] : mte(_`{_`}(MM@:@Metamodel,__(<_:_|_>(f:OCL-Type,FEATURE@ARCHITECTURECRA@f@CLASS:Feature@architectureCRA,_#_(_:_(isEncapsulatedBy@Feature@architectureCRA,ISENCAPSULATEDBY@f@ATT:OCL-Type),f@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(c:OCL-Type,CLASS@ARCHITECTURECRA@c@CLASS:Class@architectureCRA,_#_(_:_(encapsulates@Class@architectureCRA,ENCAPSULATES@c@ATT:OCL-Type),c@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object})))
    = 0
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(f:OCL-Type,FEATURE@ARCHITECTURECRA@f@CLASS:Feature@architectureCRA,_#_(_:_(isEncapsulatedBy@Feature@architectureCRA,ISENCAPSULATEDBY@f@ATT:OCL-Type),f@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(c:OCL-Type,CLASS@ARCHITECTURECRA@c@CLASS:Class@architectureCRA,_#_(_:_(encapsulates@Class@architectureCRA,ENCAPSULATES@c@ATT:OCL-Type),c@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object}))
    /\ not_(notassigned@assignFeature(Set`{_`}(_;_(f:OCL-Type,c:OCL-Type)),none,MODEL@:@Model)) .
  
  eq DMM(_#_(m1:OCL-Type,m2:OCL-Type))
    = if_then_else_endif(_->`includes`(_`)(__(m1:OCL-Type,._(functionalDependency@OCLSf)),m2:OCL-Type),1.0,0.0) .
  
  eq DMA(_#_(m1:OCL-Type,a2:OCL-Type))
    = if_then_else_endif(_->`includes`(_`)(__(m1:OCL-Type,._(dataDependency@OCLSf)),a2:OCL-Type),1.0,0.0) .
  
  eq MAI(_#_(c1:OCL-Type,c2:OCL-Type))
    = _->`sum`(`)(_->`collect_(_->`select_(__(c1:OCL-Type,._(encapsulates@OCLSf)),_|_(f,_.`oclIsTypeOf`(_`)(f,Method@architectureCRA))),_|_(m1,_->`sum`(`)(_->`collect_(_->`select_(__(c2:OCL-Type,._(encapsulates@OCLSf)),_|_(f,_.`oclIsTypeOf`(_`)(f,Method@architectureCRA))),_|_(m2,__(self,._`(_`)(DMM,_#_(m1,m2))))))))) .
  ---- <end> Equations
endm
