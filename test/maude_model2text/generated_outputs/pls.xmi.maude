mod @DEVSMM@BEHAVIOR@ is
   
  ---- <begin> Importations
  pr E-MOTIONS .
  pr DISCRETE_TIME .
  pr @DEVSMM@ .
  ---- <end> Importations
   
  ---- <begin> Operation declarations
  op els@OCLSf : -> @StructuralFeature .
  op xPos@OCLSf : -> @StructuralFeature .
  op yPos@OCLSf : -> @StructuralFeature .
  op pt@OCLSf : -> @StructuralFeature .
  op defective@-@rate@OCLSf : -> @StructuralFeature .
  op in@OCLSf : -> @StructuralFeature .
  op out@OCLSf : -> @StructuralFeature .
  op counter@OCLSf : -> @StructuralFeature .
  op parts@OCLSf : -> @StructuralFeature .
  op speed@OCLSf : -> @StructuralFeature .
  op out@OCLSf : -> @StructuralFeature .
  op outParts@OCLSf : -> @StructuralFeature .
  op capacity@OCLSf : -> @StructuralFeature .
  op defective@OCLSf : -> @StructuralFeature .
  op currentExec@GenHandle : Set @Model -> Bool .
  op currentExec@GenHead : Set @Model -> Bool .
  op currentExec@Carry : Set @Model -> Bool .
  op nac@Assemble : Set Set{@Object} @Model -> Bool .
  op currentExec@Assemble : Set @Model -> Bool .
  op nac@Collect : Set Set{@Object} @Model -> Bool .
  op currentExec@Collect : Set @Model -> Bool .
  op e : -> Vid .
  op nac@InitialRule : Set Set{@Object} @Model -> Bool .
  ---- <begin> Operation declarations
   
  ---- <begin> Equations
  eq name(els@OCLSf)
    = "els" .
  
  eq name(xPos@OCLSf)
    = "xPos" .
  
  eq name(yPos@OCLSf)
    = "yPos" .
  
  eq name(pt@OCLSf)
    = "pt" .
  
  eq name(defective@-@rate@OCLSf)
    = "defective_rate" .
  
  eq name(in@OCLSf)
    = "in" .
  
  eq name(out@OCLSf)
    = "out" .
  
  eq name(counter@OCLSf)
    = "counter" .
  
  eq name(parts@OCLSf)
    = "parts" .
  
  eq name(speed@OCLSf)
    = "speed" .
  
  eq name(out@OCLSf)
    = "out" .
  
  eq name(outParts@OCLSf)
    = "outParts" .
  
  eq name(capacity@OCLSf)
    = "capacity" .
  
  eq name(defective@OCLSf)
    = "defective" .
  
  eq rulesInformation
    = _`{_`}(@MGBehavior@,__(<_:_|_>(oid('Rule0),AtomicRule@MGBehavior,_#_(_:_(name@Rule@MGBehavior,"GenHandle"),_:_(lowerBound@Rule@MGBehavior,null),_:_(upperBound@Rule@MGBehavior,null),_:_(soft@Rule@MGBehavior,false),_:_(periodicity@AtomicRule@MGBehavior,null))),<_:_|_>(oid('Rule0),AtomicRule@MGBehavior,_#_(_:_(name@Rule@MGBehavior,"GenHead"),_:_(lowerBound@Rule@MGBehavior,null),_:_(upperBound@Rule@MGBehavior,null),_:_(soft@Rule@MGBehavior,false),_:_(periodicity@AtomicRule@MGBehavior,null))),<_:_|_>(oid('Rule0),AtomicRule@MGBehavior,_#_(_:_(name@Rule@MGBehavior,"Carry"),_:_(lowerBound@Rule@MGBehavior,null),_:_(upperBound@Rule@MGBehavior,null),_:_(soft@Rule@MGBehavior,false),_:_(periodicity@AtomicRule@MGBehavior,null))),<_:_|_>(oid('Rule0),AtomicRule@MGBehavior,_#_(_:_(name@Rule@MGBehavior,"Transfer"),_:_(lowerBound@Rule@MGBehavior,null),_:_(upperBound@Rule@MGBehavior,null),_:_(soft@Rule@MGBehavior,false),_:_(periodicity@AtomicRule@MGBehavior,null))),<_:_|_>(oid('Rule0),AtomicRule@MGBehavior,_#_(_:_(name@Rule@MGBehavior,"Assemble"),_:_(lowerBound@Rule@MGBehavior,null),_:_(upperBound@Rule@MGBehavior,null),_:_(soft@Rule@MGBehavior,false),_:_(periodicity@AtomicRule@MGBehavior,null))),<_:_|_>(oid('Rule0),AtomicRule@MGBehavior,_#_(_:_(name@Rule@MGBehavior,"Collect"),_:_(lowerBound@Rule@MGBehavior,null),_:_(upperBound@Rule@MGBehavior,null),_:_(soft@Rule@MGBehavior,false),_:_(periodicity@AtomicRule@MGBehavior,null))),<_:_|_>(oid('Rule0),AtomicRule@MGBehavior,_#_(_:_(name@Rule@MGBehavior,"InitialRule"),_:_(lowerBound@Rule@MGBehavior,null),_:_(upperBound@Rule@MGBehavior,null),_:_(soft@Rule@MGBehavior,false),_:_(periodicity@AtomicRule@MGBehavior,null))))) .
  
  eq currentExec@GenHandle(Set`{_`}(_;_(hg:OCL-Type,c:OCL-Type)),_`{_`}(MM@:@Metamodel,__(<_:_|_>(ACTEXEC@:Oid,AtomicActionExec@MGBehavior,_#_(_:_(action@ActionExec@MGBehavior,"GenHandle"),_:_(endingTime@ActionExec@MGBehavior,null),_:_(participants@ActionExec@MGBehavior,Set`{_`}(_;_(L@ACTEXEC@:MSet{OCL-Exp},OR1@:Oid,OR2@:Oid))),ACTEXEC@@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object},<_:_|_>(OR1@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,hg:OCL-Type),_:_(role@ObjectRole@MGBehavior,"hg"))),<_:_|_>(OR2@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,c:OCL-Type),_:_(role@ObjectRole@MGBehavior,"c"))))))
    = true .
  
  eq currentExec@GenHandle(OIDSET@:Set,MODEL@:@Model)
    = false .
  
  ceq [GenHandle] : mte(_`{_`}(MM@:@Metamodel,__(<_:_|_>(hg:OCL-Type,GENHANDLE@DEVSMM@hg@CLASS:GenHandle@devsmm,_#_(_:_(out@Machine@devsmm,OUT@hg@ATT:OCL-Type),hg@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(c:OCL-Type,CONVEYOR@DEVSMM@c@CLASS:Conveyor@devsmm,c@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object})))
    = 0
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(hg:OCL-Type,GENHANDLE@DEVSMM@hg@CLASS:GenHandle@devsmm,_#_(_:_(out@Machine@devsmm,OUT@hg@ATT:OCL-Type),hg@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(c:OCL-Type,CONVEYOR@DEVSMM@c@CLASS:Conveyor@devsmm,c@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object}))
    /\ _in_(c:OCL-Type,OUT@hg@ATT:OCL-Type)
    /\ VAR1@:Oid := newId(_+_(VALUE@ids@:Int,3))
    /\ VAR2@:Oid := newId(_+_(VALUE@ids@:Int,4))
    /\ prodTime:OCL-Type := eval(_+_(_-_(__(hg:OCL-Type,._(pt@OCLSf)),3),_rem_(random(_+_(VALUE@rdm@:Int,2)),eval(6,env(empty),MODEL@:@Model))),env(empty),MODEL@:@Model)
    /\ rdm:OCL-Type := eval(_rem_(random(_+_(VALUE@rdm@:Int,3)),eval(100,env(empty),MODEL@:@Model)),env(empty),MODEL@:@Model)
    /\ eval(_and_(_>_(__(hg:OCL-Type,._(counter@OCLSf)),0),_<_(_+_(_->`size`(`)(__(c:OCL-Type,._(parts@OCLSf))),_->`size`(`)(__(c:OCL-Type,._(outParts@OCLSf)))),__(c:OCL-Type,._(capacity@OCLSf)))),env(empty),MODEL@:@Model)
    /\ not_(currentExec@GenHandle(Set`{_`}(_;_(hg:OCL-Type,c:OCL-Type)),MODEL@:@Model)) .
  
  eq currentExec@GenHead(Set`{_`}(_;_(hg:OCL-Type,c:OCL-Type)),_`{_`}(MM@:@Metamodel,__(<_:_|_>(ACTEXEC@:Oid,AtomicActionExec@MGBehavior,_#_(_:_(action@ActionExec@MGBehavior,"GenHead"),_:_(endingTime@ActionExec@MGBehavior,null),_:_(participants@ActionExec@MGBehavior,Set`{_`}(_;_(L@ACTEXEC@:MSet{OCL-Exp},OR1@:Oid,OR2@:Oid))),ACTEXEC@@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object},<_:_|_>(OR1@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,hg:OCL-Type),_:_(role@ObjectRole@MGBehavior,"hg"))),<_:_|_>(OR2@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,c:OCL-Type),_:_(role@ObjectRole@MGBehavior,"c"))))))
    = true .
  
  eq currentExec@GenHead(OIDSET@:Set,MODEL@:@Model)
    = false .
  
  ceq [GenHead] : mte(_`{_`}(MM@:@Metamodel,__(<_:_|_>(hg:OCL-Type,GENHEAD@DEVSMM@hg@CLASS:GenHead@devsmm,_#_(_:_(out@Machine@devsmm,OUT@hg@ATT:OCL-Type),hg@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(c:OCL-Type,CONVEYOR@DEVSMM@c@CLASS:Conveyor@devsmm,c@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object})))
    = 0
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(hg:OCL-Type,GENHEAD@DEVSMM@hg@CLASS:GenHead@devsmm,_#_(_:_(out@Machine@devsmm,OUT@hg@ATT:OCL-Type),hg@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(c:OCL-Type,CONVEYOR@DEVSMM@c@CLASS:Conveyor@devsmm,c@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object}))
    /\ _in_(c:OCL-Type,OUT@hg@ATT:OCL-Type)
    /\ VAR1@:Oid := newId(_+_(VALUE@ids@:Int,3))
    /\ VAR2@:Oid := newId(_+_(VALUE@ids@:Int,4))
    /\ prodTime:OCL-Type := eval(_+_(_-_(__(hg:OCL-Type,._(pt@OCLSf)),3),_rem_(random(_+_(VALUE@rdm@:Int,6)),eval(6,env(empty),MODEL@:@Model))),env(empty),MODEL@:@Model)
    /\ rdm:OCL-Type := eval(_rem_(random(_+_(VALUE@rdm@:Int,7)),eval(100,env(empty),MODEL@:@Model)),env(empty),MODEL@:@Model)
    /\ eval(_and_(_>_(__(hg:OCL-Type,._(counter@OCLSf)),0),_<_(_+_(_->`size`(`)(__(c:OCL-Type,._(parts@OCLSf))),_->`size`(`)(__(c:OCL-Type,._(outParts@OCLSf)))),__(c:OCL-Type,._(capacity@OCLSf)))),env(empty),MODEL@:@Model)
    /\ not_(currentExec@GenHead(Set`{_`}(_;_(hg:OCL-Type,c:OCL-Type)),MODEL@:@Model)) .
  
  eq currentExec@Carry(Set`{_`}(_;_(c:OCL-Type,p:OCL-Type)),_`{_`}(MM@:@Metamodel,__(<_:_|_>(ACTEXEC@:Oid,AtomicActionExec@MGBehavior,_#_(_:_(action@ActionExec@MGBehavior,"Carry"),_:_(endingTime@ActionExec@MGBehavior,null),_:_(participants@ActionExec@MGBehavior,Set`{_`}(_;_(L@ACTEXEC@:MSet{OCL-Exp},OR1@:Oid,OR2@:Oid))),ACTEXEC@@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object},<_:_|_>(OR1@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,c:OCL-Type),_:_(role@ObjectRole@MGBehavior,"c"))),<_:_|_>(OR2@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,p:OCL-Type),_:_(role@ObjectRole@MGBehavior,"p"))))))
    = true .
  
  eq currentExec@Carry(OIDSET@:Set,MODEL@:@Model)
    = false .
  
  ceq [Carry] : mte(_`{_`}(MM@:@Metamodel,__(<_:_|_>(c:OCL-Type,CONVEYOR@DEVSMM@c@CLASS:Conveyor@devsmm,_#_(_:_(parts@Container@devsmm,PARTS@c@ATT:OCL-Type),c@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(p:OCL-Type,PART@DEVSMM@p@CLASS:Part@devsmm,p@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object})))
    = 0
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(c:OCL-Type,CONVEYOR@DEVSMM@c@CLASS:Conveyor@devsmm,_#_(_:_(parts@Container@devsmm,PARTS@c@ATT:OCL-Type),c@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(p:OCL-Type,PART@DEVSMM@p@CLASS:Part@devsmm,p@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object}))
    /\ _in_(p:OCL-Type,PARTS@c@ATT:OCL-Type)
    /\ not_(currentExec@Carry(Set`{_`}(_;_(c:OCL-Type,p:OCL-Type)),MODEL@:@Model)) .
  
  ceq nac@Assemble(Set`{_`}(_;_(t:OCL-Type,he:OCL-Type,ha:OCL-Type,a:OCL-Type,c:OCL-Type)),__(<_:_|_>(VAR1@:Oid,Variable@MGBehavior,_#_(_:_(name@Variable@MGBehavior,"prodTime"),_:_(value@Variable@MGBehavior,prodTime:OCL-Type))),<_:_|_>(VAR2@:Oid,Variable@MGBehavior,_#_(_:_(name@Variable@MGBehavior,"rdm"),_:_(value@Variable@MGBehavior,rdm:OCL-Type)))),_`{_`}(MM@:@Metamodel,__(<_:_|_>(assem:OCL-Type,AtomicActionExec@MGBehavior,_#_(_:_(action@ActionExec@MGBehavior,"Assemble"),_:_(status@AtomicActionExec@MGBehavior,unfinished@ActionStatus@MGBehavior),_:_(participants@ActionExec@MGBehavior,Set`{_`}(_;_(L@assem:MSet{OCL-Exp},OR1@assem:Oid))),assem@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object},<_:_|_>(OR1@assem:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,a:OCL-Type),_:_(role@ObjectRole@MGBehavior,"a"))))))
    = true
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(assem:OCL-Type,AtomicActionExec@MGBehavior,_#_(_:_(action@ActionExec@MGBehavior,"Assemble"),_:_(status@AtomicActionExec@MGBehavior,unfinished@ActionStatus@MGBehavior),_:_(participants@ActionExec@MGBehavior,Set`{_`}(_;_(L@assem:MSet{OCL-Exp},OR1@assem:Oid))),assem@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object},<_:_|_>(OR1@assem:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,a:OCL-Type),_:_(role@ObjectRole@MGBehavior,"a"))))) .
  
  eq nac@Assemble(OIDSET@:Set,OBJSET@:Set{@Object},MODEL@:@Model)
    = false .
  
  eq currentExec@Assemble(Set`{_`}(_;_(t:OCL-Type,he:OCL-Type,ha:OCL-Type,a:OCL-Type,c:OCL-Type)),_`{_`}(MM@:@Metamodel,__(<_:_|_>(ACTEXEC@:Oid,AtomicActionExec@MGBehavior,_#_(_:_(action@ActionExec@MGBehavior,"Assemble"),_:_(endingTime@ActionExec@MGBehavior,null),_:_(participants@ActionExec@MGBehavior,Set`{_`}(_;_(L@ACTEXEC@:MSet{OCL-Exp},OR1@:Oid,OR2@:Oid,OR3@:Oid,OR4@:Oid,OR5@:Oid))),ACTEXEC@@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object},<_:_|_>(OR1@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,t:OCL-Type),_:_(role@ObjectRole@MGBehavior,"t"))),<_:_|_>(OR2@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,he:OCL-Type),_:_(role@ObjectRole@MGBehavior,"he"))),<_:_|_>(OR3@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,ha:OCL-Type),_:_(role@ObjectRole@MGBehavior,"ha"))),<_:_|_>(OR4@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,a:OCL-Type),_:_(role@ObjectRole@MGBehavior,"a"))),<_:_|_>(OR5@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,c:OCL-Type),_:_(role@ObjectRole@MGBehavior,"c"))))))
    = true .
  
  eq currentExec@Assemble(OIDSET@:Set,MODEL@:@Model)
    = false .
  
  ceq [Assemble] : mte(_`{_`}(MM@:@Metamodel,__(<_:_|_>(t:OCL-Type,TRAY@DEVSMM@t@CLASS:Tray@devsmm,_#_(_:_(parts@Container@devsmm,PARTS@t@ATT:OCL-Type),t@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(he:OCL-Type,HEAD@DEVSMM@he@CLASS:Head@devsmm,he@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(ha:OCL-Type,HANDLE@DEVSMM@ha@CLASS:Handle@devsmm,ha@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(a:OCL-Type,ASSEMBLE@DEVSMM@a@CLASS:Assemble@devsmm,_#_(_:_(in@Machine@devsmm,IN@a@ATT:OCL-Type),_:_(out@Machine@devsmm,OUT@a@ATT:OCL-Type),a@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(c:OCL-Type,CONVEYOR@DEVSMM@c@CLASS:Conveyor@devsmm,c@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object})))
    = 0
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(t:OCL-Type,TRAY@DEVSMM@t@CLASS:Tray@devsmm,_#_(_:_(parts@Container@devsmm,PARTS@t@ATT:OCL-Type),t@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(he:OCL-Type,HEAD@DEVSMM@he@CLASS:Head@devsmm,he@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(ha:OCL-Type,HANDLE@DEVSMM@ha@CLASS:Handle@devsmm,ha@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(a:OCL-Type,ASSEMBLE@DEVSMM@a@CLASS:Assemble@devsmm,_#_(_:_(in@Machine@devsmm,IN@a@ATT:OCL-Type),_:_(out@Machine@devsmm,OUT@a@ATT:OCL-Type),a@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(c:OCL-Type,CONVEYOR@DEVSMM@c@CLASS:Conveyor@devsmm,c@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object}))
    /\ _in_(he:OCL-Type,PARTS@t@ATT:OCL-Type)
    /\ _in_(ha:OCL-Type,PARTS@t@ATT:OCL-Type)
    /\ _in_(t:OCL-Type,IN@a@ATT:OCL-Type)
    /\ _in_(c:OCL-Type,OUT@a@ATT:OCL-Type)
    /\ VAR1@:Oid := newId(_+_(VALUE@ids@:Int,6))
    /\ VAR2@:Oid := newId(_+_(VALUE@ids@:Int,7))
    /\ prodTime:OCL-Type := eval(_+_(_-_(__(a:OCL-Type,._(pt@OCLSf)),3),_rem_(random(_+_(VALUE@rdm@:Int,10)),eval(6,env(empty),MODEL@:@Model))),env(empty),MODEL@:@Model)
    /\ rdm:OCL-Type := eval(_rem_(random(_+_(VALUE@rdm@:Int,11)),eval(100,env(empty),MODEL@:@Model)),env(empty),MODEL@:@Model)
    /\ not_(nac@Assemble(Set`{_`}(_;_(t:OCL-Type,he:OCL-Type,ha:OCL-Type,a:OCL-Type,c:OCL-Type)),__(<_:_|_>(VAR1@:Oid,Variable@MGBehavior,_#_(_:_(name@Variable@MGBehavior,"prodTime"),_:_(value@Variable@MGBehavior,prodTime:OCL-Type))),<_:_|_>(VAR2@:Oid,Variable@MGBehavior,_#_(_:_(name@Variable@MGBehavior,"rdm"),_:_(value@Variable@MGBehavior,rdm:OCL-Type)))),MODEL@:@Model))
    /\ not_(currentExec@Assemble(Set`{_`}(_;_(t:OCL-Type,he:OCL-Type,ha:OCL-Type,a:OCL-Type,c:OCL-Type)),MODEL@:@Model)) .
  
  ceq nac@Collect(Set`{_`}(_;_(h:OCL-Type,t:OCL-Type,u:OCL-Type)),<_:_|_>(VAR1@:Oid,Variable@MGBehavior,_#_(_:_(name@Variable@MGBehavior,"collectTime"),_:_(value@Variable@MGBehavior,collectTime:OCL-Type))),_`{_`}(MM@:@Metamodel,__(<_:_|_>(co:OCL-Type,AtomicActionExec@MGBehavior,_#_(_:_(action@ActionExec@MGBehavior,"Collect"),_:_(status@AtomicActionExec@MGBehavior,unfinished@ActionStatus@MGBehavior),_:_(participants@ActionExec@MGBehavior,Set`{_`}(_;_(L@co:MSet{OCL-Exp},OR1@co:Oid))),co@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object},<_:_|_>(OR1@co:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,u:OCL-Type),_:_(role@ObjectRole@MGBehavior,"u"))))))
    = true
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(co:OCL-Type,AtomicActionExec@MGBehavior,_#_(_:_(action@ActionExec@MGBehavior,"Collect"),_:_(status@AtomicActionExec@MGBehavior,unfinished@ActionStatus@MGBehavior),_:_(participants@ActionExec@MGBehavior,Set`{_`}(_;_(L@co:MSet{OCL-Exp},OR1@co:Oid))),co@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object},<_:_|_>(OR1@co:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,u:OCL-Type),_:_(role@ObjectRole@MGBehavior,"u"))))) .
  
  eq nac@Collect(OIDSET@:Set,OBJSET@:Set{@Object},MODEL@:@Model)
    = false .
  
  eq currentExec@Collect(Set`{_`}(_;_(h:OCL-Type,t:OCL-Type,u:OCL-Type)),_`{_`}(MM@:@Metamodel,__(<_:_|_>(ACTEXEC@:Oid,AtomicActionExec@MGBehavior,_#_(_:_(action@ActionExec@MGBehavior,"Collect"),_:_(endingTime@ActionExec@MGBehavior,null),_:_(participants@ActionExec@MGBehavior,Set`{_`}(_;_(L@ACTEXEC@:MSet{OCL-Exp},OR1@:Oid,OR2@:Oid,OR3@:Oid))),ACTEXEC@@SFS:Set{@StructuralFeatureInstance})),OBJSET@:Set{@Object},<_:_|_>(OR1@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,h:OCL-Type),_:_(role@ObjectRole@MGBehavior,"h"))),<_:_|_>(OR2@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,t:OCL-Type),_:_(role@ObjectRole@MGBehavior,"t"))),<_:_|_>(OR3@:Oid,ObjectRole@MGBehavior,_#_(_:_(actualObject@ObjectRole@MGBehavior,u:OCL-Type),_:_(role@ObjectRole@MGBehavior,"u"))))))
    = true .
  
  eq currentExec@Collect(OIDSET@:Set,MODEL@:@Model)
    = false .
  
  ceq [Collect] : mte(_`{_`}(MM@:@Metamodel,__(<_:_|_>(h:OCL-Type,HAMMER@DEVSMM@h@CLASS:Hammer@devsmm,h@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(t:OCL-Type,TRAY@DEVSMM@t@CLASS:Tray@devsmm,t@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(u:OCL-Type,USER@DEVSMM@u@CLASS:User@devsmm,u@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object})))
    = 0
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(h:OCL-Type,HAMMER@DEVSMM@h@CLASS:Hammer@devsmm,h@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(t:OCL-Type,TRAY@DEVSMM@t@CLASS:Tray@devsmm,t@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(u:OCL-Type,USER@DEVSMM@u@CLASS:User@devsmm,u@SFS:Set{@StructuralFeatureInstance}),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object}))
    /\ VAR1@:Oid := newId(_+_(VALUE@ids@:Int,4))
    /\ collectTime:OCL-Type := eval(_+_(_+_(_.`abs`(`)(_-_(__(h:OCL-Type,._(xPos@OCLSf)),__(u:OCL-Type,._(xPos@OCLSf)))),_.`abs`(`)(_-_(__(h:OCL-Type,._(yPos@OCLSf)),__(u:OCL-Type,._(yPos@OCLSf))))),1),env(empty),MODEL@:@Model)
    /\ eval(_.=._(h:OCL-Type,_->`first`(`)(__(t:OCL-Type,._(parts@OCLSf)))),env(empty),MODEL@:@Model)
    /\ not_(nac@Collect(Set`{_`}(_;_(h:OCL-Type,t:OCL-Type,u:OCL-Type)),<_:_|_>(VAR1@:Oid,Variable@MGBehavior,_#_(_:_(name@Variable@MGBehavior,"collectTime"),_:_(value@Variable@MGBehavior,collectTime:OCL-Type))),MODEL@:@Model))
    /\ not_(currentExec@Collect(Set`{_`}(_;_(h:OCL-Type,t:OCL-Type,u:OCL-Type)),MODEL@:@Model)) .
  
  ceq [Transfer] : mte(_`{_`}(MM@:@Metamodel,__(<_:_|_>(c:OCL-Type,CONVEYOR@DEVSMM@c@CLASS:Conveyor@devsmm,_#_(_:_(out@Conveyor@devsmm,OUT@c@ATT:OCL-Type),_:_(outParts@Conveyor@devsmm,OUTPARTS@c@ATT:OCL-Type),c@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(p:OCL-Type,PART@DEVSMM@p@CLASS:Part@devsmm,_#_(_:_(xPos@PositionedEl@devsmm,XPOS@p@ATT:OCL-Type),_:_(yPos@PositionedEl@devsmm,YPOS@p@ATT:OCL-Type),p@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(t:OCL-Type,TRAY@DEVSMM@t@CLASS:Tray@devsmm,_#_(_:_(parts@Container@devsmm,PARTS@t@ATT:OCL-Type),t@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object})))
    = 0
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(c:OCL-Type,CONVEYOR@DEVSMM@c@CLASS:Conveyor@devsmm,_#_(_:_(out@Conveyor@devsmm,OUT@c@ATT:OCL-Type),_:_(outParts@Conveyor@devsmm,OUTPARTS@c@ATT:OCL-Type),c@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(p:OCL-Type,PART@DEVSMM@p@CLASS:Part@devsmm,_#_(_:_(xPos@PositionedEl@devsmm,XPOS@p@ATT:OCL-Type),_:_(yPos@PositionedEl@devsmm,YPOS@p@ATT:OCL-Type),p@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(t:OCL-Type,TRAY@DEVSMM@t@CLASS:Tray@devsmm,_#_(_:_(parts@Container@devsmm,PARTS@t@ATT:OCL-Type),t@SFS:Set{@StructuralFeatureInstance})),<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object}))
    /\ _in_(p:OCL-Type,OUTPARTS@c@ATT:OCL-Type)
    /\ _in_(t:OCL-Type,OUT@c@ATT:OCL-Type)
    /\ eval(_and_(_<_(_->`size`(`)(__(t:OCL-Type,._(parts@OCLSf))),__(t:OCL-Type,._(capacity@OCLSf))),not_(_and_(_.=._(_->`size`(`)(__(t:OCL-Type,._(parts@OCLSf))),_-_(__(t:OCL-Type,._(capacity@OCLSf)),1)),_or_(_or_(_and_(_->`forAll_(__(t:OCL-Type,._(parts@OCLSf)),_|_(e,_.`oclIsKindOf`(_`)(e,Handle@devsmm))),_.`oclIsKindOf`(_`)(p:OCL-Type,Handle@devsmm)),_and_(_->`forAll_(__(t:OCL-Type,._(parts@OCLSf)),_|_(e,_.`oclIsKindOf`(_`)(e,Head@devsmm))),_.`oclIsKindOf`(_`)(p:OCL-Type,Head@devsmm))),_and_(_->`forAll_(__(t:OCL-Type,._(parts@OCLSf)),_|_(e,_.`oclIsKindOf`(_`)(e,Hammer@devsmm))),_.`oclIsKindOf`(_`)(p:OCL-Type,Hammer@devsmm)))))),env(empty),MODEL@:@Model) .
  
  ceq nac@InitialRule(Set`{_`}(mt),none,_`{_`}(MM@:@Metamodel,__(<_:_|_>(hag:OCL-Type,GENHANDLE@DEVSMM@hag@CLASS:GenHandle@devsmm,hag@SFS:Set{@StructuralFeatureInstance}),OBJSET@:Set{@Object})))
    = true
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(hag:OCL-Type,GENHANDLE@DEVSMM@hag@CLASS:GenHandle@devsmm,hag@SFS:Set{@StructuralFeatureInstance}),OBJSET@:Set{@Object})) .
  
  eq nac@InitialRule(OIDSET@:Set,OBJSET@:Set{@Object},MODEL@:@Model)
    = false .
  
  ceq [InitialRule] : mte(_`{_`}(MM@:@Metamodel,__(<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object})))
    = 0
    if MODEL@:@Model := _`{_`}(MM@:@Metamodel,__(<_:_|_>(CLK@:Oid,Clock@MGBehavior,_:_(time@Clock@MGBehavior,TIME@CLK@:Time)),<_:_|_>(oid('ids@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@ids@:Int)),<_:_|_>(oid('rdm@),Counter@MGBehavior,_:_(value@Counter@MGBehavior,VALUE@rdm@:Int)),OBJSET@:Set{@Object}))
    /\ not_(nac@InitialRule(Set`{_`}(mt),none,MODEL@:@Model)) .
  ---- <end> Equations
endm
